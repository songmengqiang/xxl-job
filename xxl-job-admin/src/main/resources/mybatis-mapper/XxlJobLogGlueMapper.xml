<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="XxlJobLogGlueMapper">
	
	<resultMap id="XxlJobLogGlue" type="com.xxl.job.admin.core.model.XxlJobLogGlue" >
		<result column="id" property="id" jdbcType = "INTEGER" />
	    <result column="job_group" property="jobGroup" jdbcType = "INTEGER"/>
	    <result column="job_name" property="jobName" jdbcType = "VARCHAR"/>
	    <result column="glue_source" property="glueSource" jdbcType = "CLOB"/>
	    <result column="glue_remark" property="glueRemark" jdbcType = "VARCHAR"/>
	    <result column="add_time" property="addTime" jdbcType = "TIMESTAMP"/>
	    <result column="update_time" property="updateTime" jdbcType = "TIMESTAMP"/>
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_name,
		t.glue_source,
		t.glue_remark,
		t.add_time,
		t.update_time
	</sql>
	<!-- 貌似要返回id -->
	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLogGlue" useGeneratedKeys="true" keyProperty="id" >
	    <selectKey resultType="int" order="BEFORE" keyProperty="id">  
	         SELECT SEQ_XXL_JOB_QRTZ_TRIGGER_LOGL.NEXTVAL FROM dual  
	    </selectKey> 
		INSERT INTO XXL_JOB_QRTZ_TRIGGER_LOGGLUE (
			id,
			job_group,
			job_name,
			glue_source, 
			glue_remark,
			add_time, 
			update_time
		) VALUES (
			#{id,jdbcType=INTEGER},
			#{jobGroup,jdbcType=INTEGER}, 
			#{jobName,jdbcType=VARCHAR},
			#{glueSource,jdbcType=CLOB},
			#{glueRemark,jdbcType=VARCHAR},
			sysdate,
			sysdate
		)
	</insert>
	
	<select id="selectList" parameterType="java.util.HashMap" resultMap="XxlJobLogGlue">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_LOGGLUE t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup,jdbcType=INTEGER}
			</if>
			<if test="jobName != null and jobName != ''">
				AND t.job_name = #{jobName,jdbcType=VARCHAR}
			</if>
		</trim>
		ORDER BY id DESC
	</select>
	
	<delete id="removeOld" parameterType="java.util.HashMap" >
		DELETE FROM XXL_JOB_QRTZ_TRIGGER_LOGGLUE
		WHERE id NOT in(
			SELECT id FROM(
			
				    select b.* from(
					         select a.*,rownum rn from (
							SELECT id FROM XXL_JOB_QRTZ_TRIGGER_LOGGLUE
							WHERE job_group = #{jobGroup,jdbcType=INTEGER} and job_name = #{jobName,jdbcType=VARCHAR}
							ORDER BY update_time desc
				        )a where rownum  <![CDATA[ <= ]]> (0+#{limit}-1)
				    ) b where b.rn  <![CDATA[ >= ]]> 0
				    
			) t1
		) AND job_group = #{jobGroup,jdbcType=INTEGER} and job_name = #{jobName,jdbcType=VARCHAR}
	</delete>
	
	<delete id="delete" parameterType="java.util.HashMap" >
		DELETE FROM XXL_JOB_QRTZ_TRIGGER_LOGGLUE
		WHERE job_group = #{jobGroup,jdbcType=INTEGER} and job_name = #{jobName,jdbcType=VARCHAR}
	</delete>
	
</mapper>