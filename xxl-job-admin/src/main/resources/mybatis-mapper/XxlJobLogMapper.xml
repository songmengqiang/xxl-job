<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="XxlJobLogMapper">
	
	<resultMap id="XxlJobLog" type="com.xxl.job.admin.core.model.XxlJobLog" >
		<result column="id" property="id" jdbcType = "INTEGER" />
	
	    <result column="job_group" property="jobGroup" jdbcType = "INTEGER" />
	    <result column="job_name" property="jobName" jdbcType = "VARCHAR" />
	    
	    <result column="executor_address" property="executorAddress" jdbcType = "VARCHAR"/>
		<result column="executor_handler" property="executorHandler" jdbcType = "VARCHAR"/>
	    <result column="executor_param" property="executorParam" jdbcType = "VARCHAR"/>
	    
	    <result column="trigger_time" property="triggerTime" jdbcType = "TIMESTAMP"/>
	    <result column="trigger_status" property="triggerStatus" jdbcType = "VARCHAR"/>
	    <result column="trigger_msg" property="triggerMsg" jdbcType = "VARCHAR"/>
	    
	    <result column="handle_time" property="handleTime" jdbcType = "TIMESTAMP"/>
	    <result column="handle_status" property="handleStatus" jdbcType = "VARCHAR"/>
	    <result column="handle_msg" property="handleMsg" jdbcType = "VARCHAR"/>
	    
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_name,
		t.executor_address,
		t.executor_handler,
		t.executor_param,
		t.trigger_time,
		t.trigger_status,
		t.trigger_msg,
		t.handle_time,
		t.handle_status,
		t.handle_msg
	</sql>
	
	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobLog">
	
	    select b.* from(
         select a.*,rownum rn from (
         
						SELECT <include refid="Base_Column_List" />
						FROM XXL_JOB_QRTZ_TRIGGER_LOG t
						<trim prefix="WHERE" prefixOverrides="AND | OR" >
							<if test="jobGroup != null and jobGroup != ''">
								AND t.job_group = #{jobGroup,jdbcType=INTEGER}
							</if>
							<if test="jobName != null and jobName != ''">
								AND t.job_name = #{jobName,jdbcType=VARCHAR}
							</if>
							<if test="triggerTimeStart != null">
								AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart,jdbcType=VARCHAR}
							</if>
							<if test="triggerTimeEnd != null">
								AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd,jdbcType=VARCHAR}
							</if>
						</trim>
						ORDER BY id DESC
         
	       )a where rownum  <![CDATA[ <= ]]> (#{offset,jdbcType=INTEGER}+#{pagesize,jdbcType=INTEGER}-1)
		) b where b.rn  <![CDATA[ >= ]]> #{offset,jdbcType=INTEGER}
    
	</select>
	
	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM XXL_JOB_QRTZ_TRIGGER_LOG t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup != null and jobGroup != ''">
				AND t.job_group = #{jobGroup,jdbcType=INTEGER}
			</if>
			<if test="jobName != null and jobName != ''">
				AND t.job_name = #{jobName,jdbcType=VARCHAR}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart,jdbcType=VARCHAR}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd,jdbcType=VARCHAR}
			</if>
		</trim>
	</select>
	
	<select id="load" parameterType="java.lang.Integer" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_LOG t
		WHERE t.id = #{id}
	</select>

	<!-- 貌似要返回id -->
	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLog" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" order="BEFORE" keyProperty="id">  
	         SELECT SEQ_XXL_JOB_QRTZ_TRIGGER_LOG.NEXTVAL FROM dual  
	    </selectKey> 
		INSERT INTO XXL_JOB_QRTZ_TRIGGER_LOG (
			id,
			job_group,
			job_name,
			executor_address,
			executor_handler,
			executor_param
		) VALUES (
			#{id,jdbcType=INTEGER},
			#{jobGroup,jdbcType=INTEGER}, 
			#{jobName,jdbcType=VARCHAR},
			#{executorAddress,jdbcType=VARCHAR},
			#{executorHandler,jdbcType=VARCHAR},
			#{executorParam,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateTriggerInfo">
		UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
		SET 
			trigger_time= #{triggerTime,jdbcType=VARCHAR}, 
			trigger_status= #{triggerStatus,jdbcType=VARCHAR}, 
			trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
			executor_address= #{executorAddress,jdbcType=VARCHAR},
			executor_handler=#{executorHandler,jdbcType=VARCHAR},
			executor_param= #{executorParam,jdbcType=VARCHAR}
		WHERE id= #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateHandleInfo">
		UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
		SET 
			handle_time= #{handleTime,jdbcType=VARCHAR}, 
			handle_status= #{handleStatus,jdbcType=VARCHAR}, 
			handle_msg= #{handleMsg,jdbcType=VARCHAR} 
		WHERE id= #{id,jdbcType=INTEGER}
	</update>
	
	<delete id="delete">
		delete from XXL_JOB_QRTZ_TRIGGER_LOG
		WHERE job_group = #{jobGroup,jdbcType=INTEGER}
			AND job_name = #{jobName,jdbcType=VARCHAR}
	</delete>
	
</mapper>